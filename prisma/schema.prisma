generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String

  permissions Permission[]

  status EntityStatus @default(active)

  admin   Admin?
  student Student?
  teacher Teacher?
}

model Admin {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name String

  status EntityStatus @default(active)
}

model Student {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name     String
  surname  String
  birthday DateTime
  phone    String

  groups      Group[]
  assessments Assessment[]

  status EntityStatus @default(active)
}

model Teacher {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name    String
  surname String
  phone   String

  groups Group[]

  directions Direction[]

  status EntityStatus @default(active)
}

model Group {
  id Int @id @default(autoincrement())

  name String

  direction   Direction @relation(fields: [directionId], references: [id])
  directionId Int

  months Int

  students Student[]
  lessons  Lesson[]

  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?

  status EntityStatus @default(active)
}

model Direction {
  id   Int    @id @default(autoincrement())
  name String

  groups   Group[]
  teachers Teacher[]

  status EntityStatus @default(active)
}

model Lesson {
  id Int @id @default(autoincrement())

  title String
  date  DateTime

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  material Material  @relation(fields: [materialId], references: [id])
  materialId Int @unique
  
  assessments Assessment[]
}

model Material {
  id       Int    @id @default(autoincrement())

  content String

  lesson   Lesson?
}

model Assessment {
  id Int @id @default(autoincrement())

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int    @map("lessonId")

  comment String
  color   String
  score   Int
}

enum Permission {
  student
  teacher
  admin
}

enum EntityStatus {
  active
  disabled
  deleted
}