generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String

  role Role

  permissions Permission[]

  status EntityStatus @default(active)

  Admin   Admin[]
  Student Student?
  Teacher Teacher?
}

model Admin {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name String

  status EntityStatus @default(active)
}

model Student {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name     String
  surname  String
  birthday DateTime
  phone    String

  groups Group[]

  status EntityStatus @default(active)
}

model Teacher {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name     String
  surname  String
  birthday DateTime
  phone    String

  groups Group[]

  directions Direction[]

  status EntityStatus @default(active)
}

model Group {
  id Int @id @default(autoincrement())

  name String

  direction   Direction @relation(fields: [directionId], references: [id])
  directionId Int

  months Int

  students Student[]

  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?

  status EntityStatus @default(active)
}

model Direction {
  id   Int    @id @default(autoincrement())
  name String

  groups   Group[]
  teachers Teacher[]

  status EntityStatus @default(active)
}

enum Permission {
  students
  teachers
  groups
  users
  admins
  profile
  directions
  dashboard
}

enum Role {
  none
  student
  teacher
  admin
}

enum EntityStatus {
  active
  disabled
  deleted
}
